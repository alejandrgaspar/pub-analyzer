[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pub-analyzer"
version = "0.1.0"
description = "Pub Analyzer is a text user interface (TUI), written in python, to generate reports on article publication in an automated way using Open Alex"

authors = ["Alejandro Gaspar <alejandro@gaspar.land>"]
maintainers = ["Alejandro Gaspar <alejandro@gaspar.land>"]

readme = "README.md"
license = "MIT"

packages = [{include = "pub_analyzer"}]

[tool.poetry.dependencies]
python = "^3.10"

textual = "0.32.0"
httpx = "0.24.1"
pydantic = "2.1.1"

typst = "0.5.0"
jinja2 = "3.1.2"

[tool.poetry.group.dev.dependencies]
textual-dev = "1.0.1"

pre-commit = "2.20.0"
mypy = "1.4.1"
ruff = "0.0.284"

pytest = "7.4.0"
pytest-asyncio = "0.21.0"
respx = "0.20.2"
vcrpy = "5.1.0"
pytest-recording = "0.13.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "1.5.2"
mkdocs-material = "9.1.21"

[tool.mypy]
strict = true

[tool.ruff]
required-version = "0.0.284"
target-version = "py310"

line-length = 140

select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "RUF", # Ruff-specific rules
]

ignore = [
    "D107",  # Missing docstring in __init__
    "D203",  # 1 blank line required before class docstring
    "D212",  # Multi-line docstring summary should start at the first line
    "D213",  # Multi-line docstring summary should start at the second line
    "D402",  # First line should not be the function's signature
    "D413",  # Missing blank line after last section ("{name}")
    "D415",  # First line should end with a period, question mark, or exclamation point
    "D416",  # Section name should end with a colon ("{name}")
    "D417",  # Missing argument description in the docstring: {name}
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
