[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pub-analyzer"
version = "0.1.1"
description = "A text user interface, written in python, which automates the generation of scientific production reports using OpenAlex"

authors = ["Alejandro Gaspar <alejandro@gaspar.land>"]
maintainers = ["Alejandro Gaspar <alejandro@gaspar.land>"]

homepage = "https://github.com/alejandrgaspar/pub-analyzer"
repository = "https://github.com/alejandrgaspar/pub-analyzer"
documentation = "https://pub-analyzer.com/"

readme = "README.md"
license = "MIT"

packages = [{include = "pub_analyzer"}]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows :: Windows 11",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
]

[tool.poetry.scripts]
pub-analyzer = "pub_analyzer.main:run"

[tool.poetry.dependencies]
python = "^3.10"

textual = "0.35.1"
httpx = "0.24.1"
pydantic = "2.3.0"

typst = "0.7.0"
jinja2 = "3.1.2"

[tool.poetry.group.dev.dependencies]
textual-dev = "1.1.0"

pre-commit = "3.3.3"
mypy = "1.5.1"
ruff = "0.0.286"

pytest = "7.4.0"
pytest-asyncio = "0.21.1"
respx = "0.20.2"
vcrpy = "5.1.0"
pytest-recording = "0.13.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "1.5.2"
mkdocs-material = "9.2.5"

mkdocstrings = {extras = ["python"], version = "0.22.0"}
mkdocstrings-python = "1.6.0"

[tool.mypy]
strict = true

[tool.ruff]
required-version = "0.0.286"
target-version = "py310"

line-length = 140

select = [
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "D",   # pydocstyle
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "INP", # flake8-no-pep420
    "RUF", # Ruff-specific rules
    "T20", # flake8-print
    "UP",  # pyupgrade
    "W",   # pycodestyle warnings
]

ignore = [
    "D107",  # Missing docstring in __init__
    "D203",  # 1 blank line required before class docstring
    "D212",  # Multi-line docstring summary should start at the first line
    "D213",  # Multi-line docstring summary should start at the second line
    "D402",  # First line should not be the function's signature
    "D413",  # Missing blank line after last section ("{name}")
    "D415",  # First line should end with a period, question mark, or exclamation point
    "D416",  # Section name should end with a colon ("{name}")
    "D417",  # Missing argument description in the docstring: {name}
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
